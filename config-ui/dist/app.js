!function(){"use strict";var app=angular.module("configApp",["admin","security","pascalprecht.translate","ui.bootstrap","templates-dist","ui.router"]);app.config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/"})}]),app.run(["$rootScope","$stateParams","principal","$sessionStorage","$state","$location",function($rootScope,$stateParams,principal,$sessionStorage,$state,$location){$rootScope.$on("$stateChangeStart",function(event,toState,toStateParams){var isAllowed=principal.isAuthorized(toState.permissions);isAllowed||(angular.isUndefined($sessionStorage.accessToken)?(event.preventDefault(),$sessionStorage.destUrl=$location.path(),$state.go("login")):(event.preventDefault(),console.log("error - permission denied"),$state.go("error")))})}]),angular.isUndefinedOrNull=function(val){return angular.isUndefined(val)||null===val}}(),function(){"use strict";angular.module("configApp").controller("NavigationCtrl",["$scope","$location",function($scope,$location){$scope.isActive=function(viewLocation){return"/*"===viewLocation.slice(-2)?0===$location.path().lastIndexOf(viewLocation.slice(0,viewLocation.length-2),0):viewLocation===$location.path()}}])}(),function(){"use strict";angular.module("configApp").directive("stFormErrors",["$log","globalHandleErrorService",function($log,globalHandleErrorService){return{restrict:"A",replace:!1,controller:["$scope","$element",function($scope,$element){var ctrls={},formLevelErrorsId="top_lvl_errors";this.addCtrl=function(fieldName,ctrl){ctrls[fieldName]=ctrl},this.addError=function(fieldName,error){return fieldName in ctrls?ctrls[fieldName].addError(fieldName,error):void 0},this.clearErrorsFor=function(fieldName){return fieldName in ctrls?ctrls[fieldName].clearErrors():void 0},this.clearFormLevelErrors=function(){this.clearErrorsFor(formLevelErrorsId)},this.clearAllErrors=function(){angular.forEach(ctrls,function(value,key){ctrls[key].clearErrors()})}}],link:function(scope,element,attr,ctrl){globalHandleErrorService.registerForm(attr.name,ctrl)}}}]),angular.module("configApp").directive("stFieldErrors",["$log","$compile",function($log,$compile){var getTemplate=function(){return'<label class="control-label" ng-repeat="(key, value) in errorMap" ng-show="validateOnSubmit">{{value | translate}}</label>'};return{scope:!0,restrict:"A",replace:!1,require:["?ngModel","stFieldErrors","^stFormErrors"],controller:["$scope",function($scope){$scope.errorMap={},this.addError=function(field,error){$scope.errorMap[field]=error},this.removeError=function(field){delete $scope.errorMap[field]},this.clearErrors=function(){$scope.errorMap={}}}],link:function(scope,element,attrs,ctrl){var ngModelCtrl=ctrl[0],stFieldErrorsCtrl=ctrl[1],stFormErrorsCtrl=ctrl[2];stFormErrorsCtrl.addCtrl(attrs.name,stFieldErrorsCtrl);var el=getTemplate(),compiled=$compile(el)(scope);0===element.parent().find("label").length?element.parent().parent().find("label").after(compiled):element.parent().find("label").after(compiled);var clearFormLevelErrors=function(){stFormErrorsCtrl.clearFormLevelErrors()};ngModelCtrl&&scope.$watch(function(){return ngModelCtrl.$viewValue},function(newValue){if($log.info("scope.validateOnSubmit : "+scope.validateOnSubmit),clearFormLevelErrors(),ngModelCtrl.$invalid){for(var key in ngModelCtrl.$error){$log.info("key: "+key+" value: "+ngModelCtrl.$error[key]);var tempFieldKey=attrs.name+"."+key;ngModelCtrl.$error[key]?stFieldErrorsCtrl.addError(tempFieldKey,tempFieldKey):stFieldErrorsCtrl.removeError(tempFieldKey)}$log.info("Data : "+ngModelCtrl.$viewValue+" ,ngModelCtrl error: "+ngModelCtrl.$error)}else ngModelCtrl.$valid&&(stFieldErrorsCtrl.clearErrors(),$log.info("ngModelCtrl error: no errors"))})}}}])}(),$(document).ready(function(){}),angular.module("security.login",["ui.router","ngResource"]),function(){"use strict";angular.module("security.login").controller("LoginController",["$scope","loginService","globalHandleErrorService","$sessionStorage","$location","principal",function(sc,loginService,globalHandleErrorService,$sessionStorage,$location,principal){console.log("login controller"),sc.login=function(form){form.$invalid||loginService.login($.param({username:sc.login.username,password:sc.login.password})).$promise.then(function(success){$sessionStorage.accessToken=success.token,principal.set(success.principal),$location.path($sessionStorage.destUrl),console.log("success in attempted login :"+success.token)},function(error){handleError({error:error.data.errors,formName:"loginForm"})})};var handleError=function(response){console.log("error.data.errors: "+response.error),globalHandleErrorService({formName:response.formName,fieldErrors:response.error})}}])}(),function(){"use strict";angular.module("security.login").config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"base/common/security/login/login.tpl.html"})}])}(),function(){"use strict";angular.module("security.login").factory("loginService",["$resource",function($resource,$scope){return $resource("/login/authenticate",{},{login:{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"}}})}])}(),angular.module("security",["security.login","ngStorage"]),function(){"use strict";angular.module("security").config(["$httpProvider",function($httpProvider,$stateProvider){$httpProvider.interceptors.push(["$q","$rootScope","$sessionStorage","$location",function($q,$rootScope,$sessionStorage,$location){return{responseError:function(rejection){var status=rejection.status,config=rejection.config,method=config.method,url=config.url;return angular.isUndefined($sessionStorage.accessToken)&&401===status?($sessionStorage.destUrl=$location.path(),$location.path("/login")):$rootScope.error=method+" on "+url+" failed with status "+status,$q.reject(rejection)},request:function(config){return angular.isDefined($sessionStorage.accessToken)&&(config.headers.Authorization=$sessionStorage.accessToken),config}}}])}])}(),function(){"use strict";angular.module("security").factory("principal",["$http","$timeout","$rootScope",function($http,$timeout,$rootScope){return{isResolved:function(){return angular.isDefined(this.principal)},get:function(){return this.principal},set:function(principal){this.authenticated=!0,this.principal=principal,this.fetch()},isAuthenticated:function(){return this.authenticated},fetch:function(){},isInAuthority:function(permission){return this.isAuthenticated()&&this.principal.authorities?-1!=this.principal.authorities.indexOf(permission):!1},isAuthorized:function(permissionsArr){var status=!1;if(angular.isUndefined(permissionsArr))status=!0;else if(this.isResolved())for(var i=0;i<permissionsArr.length;i++)this.isInAuthority(permissionsArr[i])&&(status=!0);return status}}}])}();var lineDiff=function(){return{diffTwoTexts:function(text1,text2){var dmp=new diff_match_patch;console.log("text1 : "+text1+" text2 : "+text2);var a=dmp.diff_linesToChars_(text2,text1),lineText1=a.chars1,lineText2=a.chars2,lineArray=a.lineArray,diffs=dmp.diff_main(lineText1,lineText2,!1);dmp.diff_charsToLines_(diffs,lineArray);var prettyHtml=createPrettyHTML.withDiff(diffs);return console.log("prettyHTML : "+prettyHtml),prettyHtml}}}(),createPrettyHTML=function(){var pattern_amp=/&/g,pattern_lt=/</g,pattern_gt=/>/g,pattern_para=/\n/g,div_ins_start='<div style="color:green">',div_delete_start='<div style="color:red">',div_end="</div>";return{withDiff:function(diffs){for(var html=[],x=0;x<diffs.length;x++){var op=diffs[x][0],data=diffs[x][1],text=data.replace(pattern_amp,"&amp;").replace(pattern_lt,"&lt;").replace(pattern_gt,"&gt;").replace(pattern_para,"<br>");switch(op){case DIFF_INSERT:html[x]=div_ins_start+text+div_end;break;case DIFF_DELETE:html[x]=div_delete_start+text+div_end;break;case DIFF_EQUAL:html[x]="<span>"+text+"</span>"}}return html.join("")}}}();!function(){"use strict";angular.module("configApp").factory("flashMessageService",["$translate","$rootScope",function($translate,$rootScope){function filterDupAndAdd(value){var message=$translate.instant(value);-1==messageColl.indexOf(message)&&messageColl.push(message)}var isError=!1,messageColl=[];return $rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){messageColl=[],isError=!1}),{setMessage:function(messages){angular.forEach(messages,function(value){filterDupAndAdd(value.message)})},getMessage:function(){return messageColl},addMessage:function(message){filterDupAndAdd(message)},setError:function(status){isError=status},isError:function(){return isError},clearAll:function(){messageColl=[]}}}])}(),function(){"use strict";angular.module("configApp").factory("globalHandleErrorService",["$translate","$log",function($translate,$log){var formColl=[],globalHandleErrorService=function(opts){var fieldErrors=opts.fieldErrors,ctrl=formColl[opts.formName];angular.isUndefinedOrNull(fieldErrors)||Object.keys(fieldErrors).forEach(function(index){$log.info("translated fieldErrorKey : "+$translate.instant(fieldErrors[index].id)+" fieldErrors : "+$translate.instant(fieldErrors[index].message)),ctrl.addError($translate.instant(fieldErrors[index].id),$translate.instant(fieldErrors[index].message))})};return globalHandleErrorService.registerForm=function(formName,ctrl){formColl[formName]=ctrl},globalHandleErrorService.clearAllErrors=function(formName){angular.isUndefinedOrNull(formColl[formName])||formColl[formName].clearAllErrors()},globalHandleErrorService}])}(),angular.module("admin",["ngResource","ui.router"]),function(){"use strict";angular.module("admin").controller("AdminCtrl",["$scope","adminService","adminVersionService","globalHandleErrorService","$sce","$q","$http",function(sc,adminService,adminVersionService,globalHandleErrorService,sce,$q,$http){sc.adminProp={description:"empty"},sc.refresh=function(form){if(!form.$invalid){sc.adminProp.description="",reset();var action="Refresh";console.log("refresh"),adminService.get({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey}).$promise.then(function(success){handleSuccess({success:success,action:action,form:form})},function(error){handleError({error:error.data.errors,action:action,formName:"adminForm"})})}},sc.create=function(form){if(!form.$invalid){reset();var action="Create";console.log("create"),adminService.save({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey,description:sc.adminProp.description}).$promise.then(function(success){handleSuccess({success:success,action:action,form:form})},function(error){handleError({error:error.data.errors,action:action,formName:"adminForm"})})}},sc.update=function(form){if(!form.$invalid){reset();var action="Update";console.log(action),adminService.update({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey,description:sc.adminProp.description}).$promise.then(function(success){handleSuccess({success:success,action:action,form:form})},function(error){handleError({error:error.data.errors,action:action,formName:"adminForm"})})}},sc["delete"]=function(form){if(!form.$invalid){reset();var action="Delete";console.log(action),adminService["delete"]({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey}).$promise.then(function(success){handleSuccess({success:success,action:action,form:form})},function(error){handleError({error:error.data.errors,action:action,formName:"adminForm"})})}},sc.diff=function(){sc.diff.responseText1="",sc.diff.responseText2="",$q.all([propertyByVersion(sc.fromVersion,"responseText1"),propertyByVersion(sc.withVersion,"responseText2")]).then(function(success){var diffResult=lineDiff.diffTwoTexts(sc.diff.responseText1,sc.diff.responseText2);sc.diff.results=sce.trustAsHtml(diffResult),console.log("after method invocation : "+sc.diff.results)},function(error){console.log("error")})},sc.searchIK=function(itemKey){return $http.get("/developer/admin/search/"+itemKey).then(function(res){return res.data})},sc.searchFK=function(fieldKey){return $http.get("/developer/admin/search/"+sc.adminProp.itemKey+"/"+fieldKey).then(function(res){return res.data})};var handleSuccess=function(response){console.log("success:"+response.success),response.form.$setPristine(),console.log("formName:"+response.success),sc.adminProp.successMessage=response.action+" completed successfully.",sc.adminProp.itemKey=response.success.item_key,sc.adminProp.fieldKey=response.success.field_key,sc.adminProp.description=response.success.description,version()},handleError=function(response){console.log("error.data.errors: "+response.error),globalHandleErrorService({formName:response.formName,fieldErrors:response.error})},reset=function(){globalHandleErrorService.clearAllErrors("adminForm"),sc.adminProp.successMessage=""},version=function(){adminVersionService.get({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey}).$promise.then(function(success){console.log("version info : "+success),sc.versions=success.versions,sc.fromVersion=success.versions.length-1},function(error){sc.versions=[],console.log("errrrrrrrrrrrrrorrrrrrrrr")})},propertyByVersion=function(version,variableName){return adminService.get({item_key:sc.adminProp.itemKey,field_key:sc.adminProp.fieldKey,version:version}).$promise.then(function(success){console.log("success : "+success),sc.diff[variableName]=success.description,console.log(variableName+" : done")},function(error){console.log("error propertyByVersion :     "+error),sc.diff[variableName]=""})}}])}(),function(){"use strict";angular.module("admin").config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"base/app/admin/admin-properties.tpl.html",permissions:["ROLE_SYS_ADMIN"]})}])}(),function(){"use strict";angular.module("admin").factory("adminService",["$resource",function($resource,$scope){return $resource("/properties/:item_key/:field_key",{},{update:{method:"PUT"}})}]),angular.module("admin").factory("adminVersionService",["$resource",function($resource,$scope){return $resource("/properties/:item_key/:field_key/versions",{},{})}])}(),angular.module("templates-dist",["base/app/admin/admin-properties.tpl.html","base/common/security/login/login.tpl.html"]),angular.module("base/app/admin/admin-properties.tpl.html",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("base/app/admin/admin-properties.tpl.html",'<div class="container">\n				<form class="form-horizontal" role="form" name="adminForm" ng-controller="AdminCtrl" novalidate st-form-errors autocomplete="off">\n						<div class="form-group">\n							<div class="col-sm-offset-2 col-sm-5">\n								<h3>Global Properties</h3>\n							</div>\n						</div>\n						<div class="form-group">\n						    	<div class="col-sm-7 col-sm-offset-2">\n						    		<div class="has-error help-block">\n					        			<label name="top_lvl_errors" st-field-errors></label>\n					        		</div>\n									<div class="has-success help-block" ng-show="adminProp.successMessage != null && adminForm.$pristine">\n										{{adminProp.successMessage}}\n									</div>\n					        	</div>\n				        </div>\n				\n						<div class="form-group" ng-class="{\'has-error\' : validateOnSubmit && adminForm.itemKey.$invalid}">\n							<label class="required col-sm-2 control-label" for="itemKey_label">Item Key</label>\n							 <div class="col-sm-5">\n								<input name="itemKey" type="text" ng-model="adminProp.itemKey" required st-field-errors tabindex="1" typeahead="itemKey for itemKey in searchIK($viewValue)" typeahead-loading="loadingLocations"  class="form-control"/><i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>\n							 </div>\n						</div>\n						<div class="form-group" ng-class="{\'has-error\' : validateOnSubmit && adminForm.fieldKey.$invalid}">\n							<label class="required col-sm-2 control-label" for="fieldKey_label">Field Key</label>\n							<div class="col-sm-5">\n								<input name="fieldKey" type="text" id="fieldKey_input_id" ng-model="adminProp.fieldKey" required st-field-errors tabindex="2" typeahead="itemKey for itemKey in searchFK($viewValue)" typeahead-loading="loadingLocations"  class="form-control"/><i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>\n							</div>	\n						</div>\n						<div class="form-group" ng-class="{\'has-error\' : validateOnSubmit && adminForm.description.$invalid}">\n							<label class="required col-sm-2 control-label" for="description_label">Description</label>\n							<div class="col-sm-7">\n								<textarea name="description" id="description_textArea_id" ng-model="adminProp.description" tabindex="3" rows="18" class="form-control"></textarea>\n							</div>\n						</div>\n						<div class="form-group">\n							<div class="col-sm-offset-2 col-sm-10">\n								<button data-ng-click="validateOnSubmit=true; refresh(adminForm)" class="btn btn-primary">Refresh</button>\n								<button data-ng-click="validateOnSubmit=true; create(adminForm)" class="btn btn-primary">Create</button>\n								<button data-ng-click="validateOnSubmit=true; update(adminForm)" class="btn btn-primary">Update</button>\n								<button data-ng-click="validateOnSubmit=true; delete(adminForm)" class="btn btn-primary">Delete</button>\n							</div>\n						</div>\n						<br>\n						\n						<div class="form-group">\n							<label class="col-sm-2 control-label">Diff version: </label>\n							<select class="col-sm-1" ng-model="fromVersion" ng-options="version as version for version in versions"></select><label class="col-sm-1 control-label">against:</label><select class="col-sm-1" ng-model="withVersion" ng-options="version as version for version in versions" ng-change="diff()"></select>\n						</div>\n						<div class="form-group">\n							<label class="col-sm-2 control-label">Response:</label>\n							<pre class="col-sm-7"><div ng-bind-html="diff.results"></div></pre>\n						</div>\n				</form>\n</div>\n')}]),angular.module("base/common/security/login/login.tpl.html",[]).run(["$templateCache",function($templateCache){"use strict";$templateCache.put("base/common/security/login/login.tpl.html",'<div class="page-header">\n	<h2>Login</h2>\n</div>\n\n\n		<form class="form-horizontal" name="loginForm" ng-controller="LoginController" novalidate st-form-errors autocomplete="off">\n			<div class="form-group">\n				<label for="username" class="col-sm-3 control-label">User Name:</label>\n				<div class="col-xs-4">\n					<input id="username" ng-model="login.username" type="text" class="form-control" />\n				</div>\n			</div>\n			<div class="form-group">\n				<label for="password" class="col-sm-3 control-label">Password:</label>\n				<div class="col-xs-4">\n					<input id="password" ng-model="login.password" type="password" class="form-control input-medium" />\n				</div>\n			</div>\n			<div class="form-group">\n				<div class="col-xs-3 col-sm-offset-3">\n					<input type="submit" value="Log In" class="btn btn-primary" ng-click="login(loginForm)"/>\n				</div>\n			</div>\n		</form>\n	\n')}]);